{"version":3,"sources":["components/stop.jsx","service/routeCalculator.js","components/plotter.jsx","data/map.js","App.js","index.js"],"names":["Stop","id","this","props","datalistId","selected","value","list","placeholder","onChange","e","target","options","map","option","label","onClick","onDelete","Component","calculateRoute","fromId","toId","startNode","nodes","endNode","undefined","crowDistance","distanceBetweenNodes","route","distances","previous","unvisited","Set","Object","keys","neighbours","forEach","nodeId","Number","MAX_VALUE","edges","edge","node1","node2","push","size","current","filter","has","reduce","prev","curr","delete","neighbour","jumpDistance","alt","nextId","previousValue","to","from","distance","reverse","previousToRoute","getDijkstraRoute","chalkedDistance","step","xDiff","x","yDiff","y","zDiff","z","Math","sqrt","pow","Plotter","handleChangeStop","index","stopId","getIdFromLabel","state","setState","handleDeleteStop","splice","handleAddStop","prevState","stops","hidden","name","getLabelFromId","renderRouteDetails","Array","length","calculateLeg","leg","stop","find","stopIdFrom","stopIdTo","velour","jacquard","poplin","gathernotch","leewardCrossroads","windwardCrossroads","upperWyroads","lowerWyroads","starboardZeeroads","portZeeroads","hopsack","caves","tambour","App","Fragment","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5fc2219b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Stop extends Component {\r\n  render() {\r\n    const id = this.props.id;\r\n    const datalistId = id + \"StopOptions\";\r\n    const selected = this.props.selected;\r\n    return (\r\n      <div>\r\n        <input\r\n          value={selected}\r\n          list={datalistId}\r\n          placeholder=\"Enter stop...\"\r\n          onChange={(e) => this.props.onChange(id, e.target.value)}\r\n        />\r\n        <datalist id={datalistId}>\r\n          {this.props.options.map((option) => (\r\n            <option key={option.id} value={option.label} />\r\n          ))}\r\n        </datalist>\r\n        <button onClick={() => this.props.onDelete(id)}>Delete Stop</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Stop;\r\n","export function calculateRoute(map, fromId, toId) {\r\n  const startNode = map.nodes[fromId]\r\n  const endNode = map.nodes[toId]\r\n  if (startNode === undefined || endNode === undefined) {\r\n    return undefined;\r\n  } else {\r\n    const crowDistance = distanceBetweenNodes(startNode, endNode)\r\n    const route = getDijkstraRoute(map, fromId, toId)\r\n    const chalkedDistance = route.map(step => step.distance).reduce((prev, curr) => prev + curr, 0)\r\n    return {\r\n      chalkedDistance,\r\n      crowDistance,\r\n      route,\r\n      from: fromId,\r\n      to: toId\r\n    };\r\n  }\r\n}\r\n\r\nexport function distanceBetweenNodes(node1, node2) {\r\n  const xDiff = node1.x - node2.x\r\n  const yDiff = node1.y - node2.y\r\n  const zDiff = node1.z - node2.z\r\n  return Math.sqrt(Math.pow(xDiff, 2) + Math.pow(yDiff, 2) + Math.pow(zDiff, 2));\r\n}\r\n\r\nfunction getDijkstraRoute(map, fromId, toId) {\r\n  let distances = {}\r\n  let previous = {}\r\n  let unvisited = new Set(Object.keys(map.nodes))\r\n  let neighbours = {}\r\n  unvisited.forEach(nodeId => {\r\n    distances[nodeId] = Number.MAX_VALUE\r\n    previous[nodeId] = undefined\r\n    neighbours[nodeId] = []\r\n  })\r\n  map.edges.forEach(edge => {\r\n    const node1 = edge[0]\r\n    const node2 = edge[1]\r\n    neighbours[node1].push(node2)\r\n    neighbours[node2].push(node1)\r\n  })\r\n\r\n  distances[fromId] = 0\r\n\r\n  while (unvisited.size > 0) {\r\n    let current = Object.keys(distances)\r\n      .filter((nodeId) => unvisited.has(nodeId))\r\n      .reduce((prev, curr) => distances[curr] < distances[prev] ? curr : prev)\r\n    unvisited.delete(current)\r\n    for (let neighbour of neighbours[current]) {\r\n      const jumpDistance = distanceBetweenNodes(map.nodes[current], map.nodes[neighbour])\r\n      const alt = distances[current] + jumpDistance\r\n      if (alt < distances[neighbour]) {\r\n        distances[neighbour] = alt\r\n        previous[neighbour] = [current, jumpDistance]\r\n      }\r\n    }\r\n  }\r\n\r\n  return previousToRoute(previous, toId)\r\n\r\n}\r\n\r\nfunction previousToRoute(previous, toId) {\r\n  if (previous[toId] === undefined) {\r\n    return []\r\n  } else {\r\n    let nextId = toId;\r\n    let route = []\r\n    while (previous[nextId] !== undefined) {\r\n      const previousValue = previous[nextId]\r\n      route.push({\r\n        to: nextId, from: previousValue[0], distance: previousValue[1]\r\n      })\r\n      nextId = previousValue[0]\r\n    }\r\n    return route.reverse();\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport Stop from \"./stop\";\r\nimport { calculateRoute } from \"../service/routeCalculator\";\r\n\r\nclass Plotter extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const map = props.map;\r\n    const nodes = props.map.nodes;\r\n    const stops = Object.keys(nodes)\r\n      .filter((nodeId) => !nodes[nodeId].hidden)\r\n      .map((nodeId) => {\r\n        return {\r\n          id: nodeId,\r\n          label: nodes[nodeId].name,\r\n        };\r\n      });\r\n    const route = [\"\", \"\"];\r\n    this.state = {\r\n      map,\r\n      stops,\r\n      route,\r\n      distance: 0,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const route = this.state.route;\r\n\r\n    return (\r\n      <div>\r\n        <ul>\r\n          {route.map((stopId, index) => (\r\n            <Stop\r\n              key={index}\r\n              id={index}\r\n              options={this.state.stops}\r\n              selected={this.getLabelFromId(stopId)}\r\n              onChange={this.handleChangeStop}\r\n              onDelete={this.handleDeleteStop}\r\n            ></Stop>\r\n          ))}\r\n        </ul>\r\n        <button onClick={this.handleAddStop}>Add Stop</button>\r\n        <ul>{this.renderRouteDetails()}</ul>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderRouteDetails() {\r\n    const route = this.state.route;\r\n    const legs = [...Array(route.length - 1).keys()].map((index) => {\r\n      return this.calculateLeg(route[index], route[index + 1]);\r\n    });\r\n    const filteredLegs = legs.filter((leg) => leg !== undefined);\r\n\r\n    return filteredLegs.map((leg) => (\r\n      <li key={leg.from + leg.to}>\r\n        {this.getLabelFromId(leg.from) + \" to \" + this.getLabelFromId(leg.to)}\r\n        <p>Chalked Distance: {leg.chalkedDistance} miles</p>\r\n        <p>Crow Distance: {leg.crowDistance} miles</p>\r\n        <p>Route:</p>\r\n        <ul>\r\n          {leg.route.map((step) => (\r\n            <li key={step.from + step.to}>\r\n              {this.getLabelFromId(step.from)}\r\n              {\" -> \"}\r\n              {this.getLabelFromId(step.to)} ({step.distance})\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </li>\r\n    ));\r\n  }\r\n\r\n  handleChangeStop = (index, selected) => {\r\n    const stopId = this.getIdFromLabel(selected);\r\n    const route = [...this.state.route];\r\n    route[index] = stopId;\r\n    this.setState({ route });\r\n  };\r\n\r\n  getIdFromLabel(label) {\r\n    const stop = this.state.stops.find((value) => value.label === label);\r\n    return !!stop ? stop.id : undefined;\r\n  }\r\n\r\n  getLabelFromId(id) {\r\n    const stop = this.state.stops.find((value) => value.id === id);\r\n    return !!stop ? stop.label : \"\";\r\n  }\r\n\r\n  handleDeleteStop = (index) => {\r\n    const route = [...this.state.route];\r\n    route.splice(index, 1);\r\n    this.setState({ route });\r\n  };\r\n\r\n  handleAddStop = () => {\r\n    this.setState((prevState) => ({\r\n      route: [...prevState.route, \"\"],\r\n    }));\r\n  };\r\n\r\n  calculateLeg(stopIdFrom, stopIdTo) {\r\n    return calculateRoute(this.state.map, stopIdFrom, stopIdTo);\r\n  }\r\n}\r\n\r\nexport default Plotter;\r\n","import { distanceBetweenNodes } from \"../service/routeCalculator\";\r\n\r\nconst nodes = {\r\n    velour: { name: \"Velour\", x: 0, y: 0, z: 0, hidden: false },\r\n    jacquard: { name: \"Jacquard\", x: -321, y: 731, z: 146, hidden: false },\r\n    poplin: { name: \"Poplin\", x: 282, y: 423, z: 173, hidden: false },\r\n    gathernotch: { name: \"Gathernotch\", x: 1079, y: 501, z: 589, hidden: false },\r\n    leewardCrossroads: { name: \"The Leeward Crossroads\", x: 2000, y: 0, z: 0, hidden: false },\r\n    windwardCrossroads: { name: \"The Windward Crossroads\", x: -2000, y: 0, z: 0, hidden: false },\r\n    upperWyroads: { name: \"The Upper Wyroads\", x: 0, y: 2000, z: 0, hidden: false },\r\n    lowerWyroads: { name: \"The Lower Wyroads\", x: 0, y: -2000, z: 0, hidden: false },\r\n    starboardZeeroads: { name: \"The Starboard Zeeroads\", x: 0, y: 0, z: 2000, hidden: false },\r\n    portZeeroads: { name: \"The Port Zeeroads\", x: 0, y: 0, z: -2000, hidden: false },\r\n    hopsack: { name: \"Hopsack\", x: 851, y: 1532, z: -2973, hidden: false },\r\n    caves: { name: \"The Caves\", x: -1589, y: 1623, z: -963, hidden: false },\r\n    tambour: { name: \"Tambour\", x: -731, y: -2531, z: 891, hidden: false }\r\n}\r\n\r\nconst edges = [\r\n    [\"velour\", \"jacquard\"],\r\n    [\"velour\", \"poplin\"],\r\n    [\"velour\", \"gathernotch\"],\r\n    [\"velour\", \"upperWyroads\"],\r\n    [\"velour\", \"lowerWyroads\"],\r\n    [\"velour\", \"windwardCrossroads\"],\r\n    [\"velour\", \"leewardCrossroads\"],\r\n    [\"velour\", \"starboardZeeroads\"],\r\n    [\"velour\", \"portZeeroads\"],\r\n    [\"poplin\", \"gathernotch\"],\r\n    [\"portZeeroads\", \"hopsack\"],\r\n    [\"lowerWyroads\", \"tambour\"]\r\n]\r\n\r\nconst map = {\r\n    nodes,\r\n    edges\r\n}\r\n\r\nexport default map;","import React, { Component } from 'react';\nimport './App.css';\nimport Plotter from './components/plotter'\nimport map from './data/map'\n\nclass App extends Component {\n  state = {\n    map\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <nav>\n          Seam Navigator\n        </nav>\n        <main>\n          <Plotter map={map}></Plotter>\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}