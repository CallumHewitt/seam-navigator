{"version":3,"sources":["components/stop.jsx","service/routeCalculator.js","components/routeCards.jsx","components/plotter.jsx","data/map.js","App.js","index.js"],"names":["Stop","id","this","props","datalistId","selected","className","type","value","list","placeholder","onChange","e","target","options","map","option","label","onClick","onDelete","Component","calculateRoute","fromId","toId","startNode","nodes","endNode","undefined","crowDistance","distanceBetweenNodes","routeDetails","getDijkstraRoute","warning","remainingDistance","closestNodeName","route","length","name","to","formattedDistance","toLocaleString","maximumFractionDigits","chalkedDistance","step","distance","reduce","prev","curr","from","node1","node2","xDiff","x","yDiff","y","zDiff","z","Math","sqrt","pow","distances","backRecord","unvisited","Set","Object","keys","neighbours","forEach","nodeId","Number","MAX_VALUE","edges","edge","push","size","current","filter","has","delete","neighbour","jumpDistance","alt","closestNode","reachableNodes","closestDistance","node","getClosestNode","key","console","log","backRecordToRoute","nextId","record","reverse","RouteCards","leg","formatDistance","number","Plotter","handleChangeStop","index","stopId","getIdFromLabel","state","setState","handleDeleteStop","splice","handleAddStop","prevState","stops","hidden","accordionId","getLabelFromId","calculateLegs","dataParent","stop","find","Array","calculateLeg","stopIdFrom","stopIdTo","jump","velour","jacquard","poplin","gathernotch","leewardCrossroads","windwardCrossroads","upperWyroads","lowerWyroads","starboardZeeroads","portZeeroads","hopsack","caves","tambour","App","Fragment","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.579a92ae.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass Stop extends Component {\n  render() {\n    const id = this.props.id;\n    const datalistId = id + \"StopOptions\";\n    const selected = this.props.selected;\n    return (\n      <div className=\"input-group mb-2\">\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          value={selected}\n          list={datalistId}\n          placeholder=\"Enter stop...\"\n          onChange={(e) => this.props.onChange(id, e.target.value)}\n        />\n        <datalist id={datalistId}>\n          {this.props.options.map((option) => (\n            <option key={option.id} value={option.label} />\n          ))}\n        </datalist>\n        <button\n          className=\"btn btn-danger\"\n          type=\"button\"\n          onClick={() => this.props.onDelete(id)}\n        >\n          Delete\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Stop;\n","export function calculateRoute(map, fromId, toId) {\n  const startNode = map.nodes[fromId]\n  const endNode = map.nodes[toId]\n  if (startNode === undefined || endNode === undefined) {\n    return undefined;\n  } else {\n    const crowDistance = distanceBetweenNodes(startNode, endNode)\n    let routeDetails = getDijkstraRoute(map, fromId, toId)\n    let warning = ''\n    if (routeDetails.remainingDistance !== 0) {\n      let closestNodeName\n      if (routeDetails.route.length === 0) {\n        closestNodeName = map.nodes[fromId].name\n      } else {\n        closestNodeName = map.nodes[routeDetails.route[routeDetails.route.length - 1].to].name;\n      }\n      const formattedDistance = routeDetails.remainingDistance.toLocaleString(undefined, { maximumFractionDigits: 2 })\n      warning = `Destination could not be reached along chalked routes. Navigating to ${closestNodeName}. An additional ${formattedDistance} miles of deep black travel will be required.`\n    }\n    const chalkedDistance = routeDetails.route.map(step => step.distance).reduce((prev, curr) => prev + curr, 0)\n    return {\n      chalkedDistance,\n      crowDistance,\n      route: routeDetails.route,\n      from: fromId,\n      to: toId,\n      warning\n    };\n  }\n}\n\nexport function distanceBetweenNodes(node1, node2) {\n  const xDiff = node1.x - node2.x\n  const yDiff = node1.y - node2.y\n  const zDiff = node1.z - node2.z\n  return Math.sqrt(Math.pow(xDiff, 2) + Math.pow(yDiff, 2) + Math.pow(zDiff, 2));\n}\n\nfunction getDijkstraRoute(map, fromId, toId) {\n  if (fromId === toId) {\n    return { route: [], remainingDistance: 0 }\n  }\n\n  let distances = {}\n  let backRecord = {}\n  let unvisited = new Set(Object.keys(map.nodes))\n  let neighbours = {}\n  unvisited.forEach(nodeId => {\n    distances[nodeId] = Number.MAX_VALUE\n    backRecord[nodeId] = undefined\n    neighbours[nodeId] = []\n  })\n  map.edges.forEach(edge => {\n    const node1 = edge[0]\n    const node2 = edge[1]\n    neighbours[node1].push(node2)\n    neighbours[node2].push(node1)\n  })\n\n  distances[fromId] = 0\n\n  while (unvisited.size > 0) {\n    let current = Object.keys(distances)\n      .filter((nodeId) => unvisited.has(nodeId))\n      .reduce((prev, curr) => distances[curr] < distances[prev] ? curr : prev)\n    unvisited.delete(current)\n    for (let neighbour of neighbours[current]) {\n      const jumpDistance = distanceBetweenNodes(map.nodes[current], map.nodes[neighbour])\n      const alt = distances[current] + jumpDistance\n      if (alt < distances[neighbour]) {\n        distances[neighbour] = alt\n        backRecord[neighbour] = [current, jumpDistance]\n      }\n    }\n  }\n\n  if (backRecord[toId] === undefined) {\n    // Unreachable\n    const reachableNodes = Object.keys(distances).filter((key) => distances[key] !== Number.MAX_VALUE)\n    const closestNode = getClosestNode(map, toId, reachableNodes)\n    const route = getDijkstraRoute(map, fromId, closestNode.node)\n    console.log(route)\n    return {\n      route: route.route,\n      remainingDistance: closestNode.distance\n    }\n  } else {\n    return {\n      route: backRecordToRoute(backRecord, toId),\n      remainingDistance: 0\n    }\n  }\n\n}\n\nfunction backRecordToRoute(backRecord, toId) {\n  let nextId = toId;\n  let route = []\n  while (backRecord[nextId] !== undefined) {\n    const record = backRecord[nextId]\n    route.push({\n      to: nextId, from: record[0], distance: record[1]\n    })\n    nextId = record[0]\n  }\n  return route.reverse();\n}\n\nfunction getClosestNode(map, toId, reachableNodes) {\n  let closestNode\n  let closestDistance = Number.MAX_VALUE\n  for (let node of reachableNodes) {\n    const distance = distanceBetweenNodes(map.nodes[node], map.nodes[toId])\n    if (distance < closestDistance) {\n      closestDistance = distance\n      closestNode = node\n    }\n  }\n  return {\n    node: closestNode,\n    distance: closestDistance\n  }\n}","import React, { Component } from \"react\";\n\nclass RouteCards extends Component {\n  render() {\n    const leg = this.props.leg;\n\n    return (\n      <div className=\"card mb-2\" key={leg.from + leg.to}>\n        <div className=\"card-header\">\n          <h5 className=\"mb-0\">{leg.from + \" to \" + leg.to}</h5>\n        </div>\n        <div className=\"card-body\">\n          <p className=\"mb-0\">\n            <b>Chalks:</b> {this.formatDistance(leg.chalkedDistance)}\n          </p>\n          <p className=\"mb-0\">\n            <b>Direct:</b> {this.formatDistance(leg.crowDistance)}\n          </p>\n          <p className=\"mb-0\">\n            <b>Route:</b>\n          </p>\n          <ul className=\"ml-4\">\n            {leg.route.map((step) => (\n              <li key={step.from + step.to}>\n                {step.from}\n                {\" -> \"}\n                {step.to} ({this.formatDistance(step.distance)})\n              </li>\n            ))}\n          </ul>\n          {!!leg.warning && (\n            <div className=\"alert alert-warning\">{leg.warning}</div>\n          )}\n        </div>\n      </div>\n    );\n  }\n\n  formatDistance(number) {\n    return (\n      number.toLocaleString(undefined, { maximumFractionDigits: 2 }) + \" miles\"\n    );\n  }\n}\n\nexport default RouteCards;\n","import React, { Component } from \"react\";\nimport Stop from \"./stop\";\nimport { calculateRoute } from \"../service/routeCalculator\";\nimport RouteCards from \"./routeCards\";\n\nclass Plotter extends Component {\n  constructor(props) {\n    super(props);\n    const map = props.map;\n    const nodes = props.map.nodes;\n    const stops = Object.keys(nodes)\n      .filter((nodeId) => !nodes[nodeId].hidden)\n      .map((nodeId) => {\n        return {\n          id: nodeId,\n          label: nodes[nodeId].name,\n        };\n      });\n    const route = [\"\", \"\"];\n    this.state = {\n      map,\n      stops,\n      route,\n      distance: 0,\n    };\n  }\n\n  render() {\n    const route = this.state.route;\n    const accordionId = \"accordion\";\n\n    return (\n      <div className=\"row\">\n        <div className=\"col-sm-4\">\n          <button className=\"btn btn-primary my-2\" onClick={this.handleAddStop}>\n            Add Stop\n          </button>\n          <ul>\n            {route.map((stopId, index) => (\n              <Stop\n                key={index}\n                id={index}\n                options={this.state.stops}\n                selected={this.getLabelFromId(stopId)}\n                onChange={this.handleChangeStop}\n                onDelete={this.handleDeleteStop}\n              ></Stop>\n            ))}\n          </ul>\n        </div>\n        <div id={accordionId} className=\"col-sm-6\">\n          {this.calculateLegs().map((leg) => (\n            <RouteCards\n              key={leg.to + leg.from}\n              leg={leg}\n              dataParent={accordionId}\n            ></RouteCards>\n          ))}\n        </div>\n      </div>\n    );\n  }\n\n  handleChangeStop = (index, selected) => {\n    const stopId = this.getIdFromLabel(selected);\n    const route = [...this.state.route];\n    route[index] = stopId;\n    this.setState({ route });\n  };\n\n  getIdFromLabel(label) {\n    const stop = this.state.stops.find((value) => value.label === label);\n    return !!stop ? stop.id : undefined;\n  }\n\n  getLabelFromId(id) {\n    const stop = this.state.stops.find((value) => value.id === id);\n    return !!stop ? stop.label : \"\";\n  }\n\n  handleDeleteStop = (index) => {\n    if (this.state.route.length > 1) {\n      const route = [...this.state.route];\n      route.splice(index, 1);\n      this.setState({ route });\n    }\n  };\n\n  handleAddStop = () => {\n    this.setState((prevState) => ({\n      route: [...prevState.route, \"\"],\n    }));\n  };\n\n  calculateLegs() {\n    const route = this.state.route;\n    const legs = [...Array(route.length - 1).keys()].map((index) => {\n      return this.calculateLeg(route[index], route[index + 1]);\n    });\n    return legs.filter((leg) => leg !== undefined);\n  }\n\n  calculateLeg(stopIdFrom, stopIdTo) {\n    let leg = calculateRoute(this.state.map, stopIdFrom, stopIdTo);\n    if (leg !== undefined) {\n      leg.from = this.getLabelFromId(leg.from);\n      leg.to = this.getLabelFromId(leg.to);\n      leg.route.forEach((jump) => {\n        jump.from = this.getLabelFromId(jump.from);\n        jump.to = this.getLabelFromId(jump.to);\n      });\n    }\n    console.log(leg);\n    return leg;\n  }\n}\n\nexport default Plotter;\n","const nodes = {\n    velour: { name: \"Velour\", x: 0, y: 0, z: 0, hidden: false },\n    jacquard: { name: \"Jacquard\", x: -321, y: 731, z: 146, hidden: false },\n    poplin: { name: \"Poplin\", x: 282, y: 423, z: 173, hidden: false },\n    gathernotch: { name: \"Gathernotch\", x: 1079, y: 501, z: 589, hidden: false },\n    leewardCrossroads: { name: \"The Leeward Crossroads\", x: 2000, y: 0, z: 0, hidden: false },\n    windwardCrossroads: { name: \"The Windward Crossroads\", x: -2000, y: 0, z: 0, hidden: false },\n    upperWyroads: { name: \"The Upper Wyroads\", x: 0, y: 2000, z: 0, hidden: false },\n    lowerWyroads: { name: \"The Lower Wyroads\", x: 0, y: -2000, z: 0, hidden: false },\n    starboardZeeroads: { name: \"The Starboard Zeeroads\", x: 0, y: 0, z: 2000, hidden: false },\n    portZeeroads: { name: \"The Port Zeeroads\", x: 0, y: 0, z: -2000, hidden: false },\n    hopsack: { name: \"Hopsack\", x: 851, y: 1532, z: -2973, hidden: false },\n    caves: { name: \"The Caves\", x: -1589, y: 1623, z: -963, hidden: true },\n    tambour: { name: \"Tambour\", x: -731, y: -2531, z: 891, hidden: false }\n}\n\nconst edges = [\n    [\"velour\", \"jacquard\"],\n    [\"velour\", \"poplin\"],\n    [\"velour\", \"gathernotch\"],\n    [\"velour\", \"upperWyroads\"],\n    [\"velour\", \"lowerWyroads\"],\n    [\"velour\", \"windwardCrossroads\"],\n    [\"velour\", \"leewardCrossroads\"],\n    [\"velour\", \"starboardZeeroads\"],\n    [\"velour\", \"portZeeroads\"],\n    [\"poplin\", \"gathernotch\"],\n    [\"portZeeroads\", \"hopsack\"],\n    [\"lowerWyroads\", \"tambour\"]\n]\n\nconst map = {\n    nodes,\n    edges\n}\n\nexport default map;","import React, { Component } from 'react';\nimport './App.css';\nimport Plotter from './components/plotter'\nimport map from './data/map'\n\nclass App extends Component {\n  state = {\n    map\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-light\">\n          <h2>Seam Navigator</h2>\n        </nav>\n        <div className=\"container-lg m-3\">\n          <Plotter map={map}></Plotter>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}